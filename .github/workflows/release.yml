# â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
# â”‚ systemctl start docker && act -s GITHUB_TOKEN="$(gh auth token)" -j upload-release --artifact-server-path ./artifacts --action-offline-mode --action-cache-path "$HOME/.cache/act" â”‚
# â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

# https://github.com/nektos/act/issues/2433
name: Upload_Release

on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# required by `gh release upload`
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # setting GH_TOKEN for the entire workflow

# GitHub requires `issues: write` permission for label management since labels are shared between issues and pull requests
permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  upload-release:
    runs-on: ubuntu-latest

    steps:
      # https://www.youtube.com/watch?v=P0wAXh5UOnM
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node

      - name: Checkout ðŸ›¬
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4

      - name: Build Appimages ðŸš€
        if: ${{ steps.release.outputs.release_created }}
        run: |

          #####################################################################################################################################################################################################################################################################################################################################################################

          git submodule update --init --recursive
          rm -rf .config/_gitmodules/retronvim/nvim/plugins/site/pack/deps/opt/snacks.nvim/tests
          rm -rf .config/_gitmodules/retronvim/nvim/plugins/site/pack/deps/start/mini.nvim/tests

          curl -L pixi.sh/install.sh | bash
          export PATH="$HOME/.pixi/bin:$PATH"

          curl  -o appimagetool -L https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool

          #####################################################################################################################################################################################################################################################################################################################################################################

          (
            mkdir -p kanata/usr/bin
            curl  -o kanata/usr/bin/kanata -L https://github.com/jtroo/kanata/releases/download/v1.9.0/kanata_cmd_allowed
            chmod +x kanata/usr/bin/kanata
            mkdir -p kanata/usr/home/user/.config
            cp    -r .config/_gitmodules/retronvim/kanata kanata/usr/home/user/.config
          )
          (
            mkdir -p mpv/usr/bin
            curl  -s https://api.github.com/repos/ivan-hc/MPV-appimage/releases/latest | grep -m1 browser_download_url | cut --delimiter='"' --fields=4 | xargs -I {} curl -o mpv/usr/bin/mpv -L {}
            chmod +x mpv/usr/bin/mpv
            cp    -r .config/_gitmodules/mpv-gallery-view/script-modules mpv/usr/home/user/.config/mpv
            cp    -r .config/_gitmodules/mpv-gallery-view/scripts        mpv/usr/home/user/.config/mpv
          )
          (
            mkdir -p nvim/usr/bin
            curl  -o nvim/usr/bin/nvim -L https://github.com/neovim/neovim/releases/download/v0.11.3/nvim-linux-x86_64.appimage
            chmod +x nvim/usr/bin/nvim
            mkdir -p nvim/usr/home/user/.config
            cp    -r .config/_gitmodules/retronvim/nvim                           nvim/usr/home/user/.config
            git clone --depth=1 https://github.com/supermaven-inc/supermaven-nvim nvim/usr/home/user/.config/nvim/plugins/site/pack/deps/opt/supermaven-nvim
          )
          (
            mkdir -p wezterm/usr/bin
            curl  -o wezterm/usr/bin/wezterm -L https://github.com/wezterm/wezterm/releases/download/nightly/WezTerm-nightly-Ubuntu20.04.AppImage
            chmod +x wezterm/usr/bin/wezterm
            curl  -L https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/FiraCode.tar.xz | tar -xJf- --directory /tmp
            cp    -r /tmp/{FiraCodeNerdFont-Regular.ttf,FiraCodeNerdFont-Bold.ttf} wezterm/assets
            mkdir -p wezterm/usr/home/user/.config/wezterm
            cp    -r .config/_gitmodules/retronvim/zsh/wezterm.lua wezterm/usr/home/user/.config/wezterm
          )
          (
            cd yazi
            pixi install
            echo  -e '#!/bin/sh'                                   > .pixi/envs/default/bin/7z
            echo  -e '$APPDIR/.pixi/envs/default/lib/p7zip/7z $@' >> .pixi/envs/default/bin/7z
            mkdir -p                                                  usr/home/user/.config
            cp    -r ../.config/_gitmodules/retronvim/yazi            usr/home/user/.config
          )
          (
            cd zsh
            pixi  install
            curl  -o .pixi/envs/default/bin/pixi -L https://github.com/prefix-dev/pixi/releases/download/v0.49.0/pixi-x86_64-unknown-linux-musl
            chmod +x .pixi/envs/default/bin/pixi
            mkdir -p                                      usr/home/user/.config
            cp    -r ../.config/_gitmodules/retronvim/zsh usr/home/user/.config
          )
          (
            ARCH=x86_64 ./appimagetool kanata  kanata.appimage
            ARCH=x86_64 ./appimagetool mpv     mpv.appimage
            ARCH=x86_64 ./appimagetool nvim    nvim.appimage
            ARCH=x86_64 ./appimagetool yazi    yazi.appimage
            ARCH=x86_64 ./appimagetool zsh     zsh.appimage

            cp ./zsh.appimage                  wezterm/usr/bin/zsh
            cp ./nvim.appimage                 wezterm/usr/bin/nvim
            cp ./yazi.appimage                 wezterm/usr/bin/yazi
            ARCH=x86_64 ./appimagetool wezterm wezterm.appimage
          )

          #####################################################################################################################################################################################################################################################################################################################################################################

      - name: Github release ðŸ“¦
        if: ${{ steps.release.outputs.release_created }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} *.appimage
